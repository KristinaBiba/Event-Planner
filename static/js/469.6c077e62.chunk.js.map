{"version":3,"file":"static/js/469.6c077e62.chunk.js","mappings":"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","sources":["images/svg/arrow-left.svg","components/Navigate/Navigate_css.jsx","components/Navigate/Navigate.jsx","components/Section/Section_css.jsx","components/Section/Section.jsx","pages/Create/Create_css.jsx","components/Form/Form_css.jsx","components/Form/TextInput/TextInput.jsx","components/Form/SelectInput/SelectInput.jsx","helpers/variables.jsx","components/Form/Form.jsx","pages/Create/Create.jsx"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgArrowLeft(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"M4 12h16M4 12l6-6m-6 6 6 6\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowLeft);\nexport default __webpack_public_path__ + \"static/media/arrow-left.0d844c741405ef12736975b32d9080f4.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const LinkComponent = styled(NavLink)`\ndisplay: inline-flex;\nalign-items: center;\ngap: 8px;\ncolor: var(--primary-text-color);\nfont-size: 14px;\nfont-style: normal;\nfont-weight: 500;\nline-height: normal;\ntext-decoration-line: none;\nstroke: var(--primary-text-color);\n&:hover,:focus {\n    color: var(--btn-hover-background); \n    stroke: var(--btn-hover-background); \n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\n","import { LinkComponent } from './Navigate_css';\nimport {ReactComponent as ArrowLeft} from '../../images/svg/arrow-left.svg';\n\n\nexport const Navigate = ({ to, title }) => {\n  return <LinkComponent to={to}><ArrowLeft aria-label=\"Return to the previous page\"/> {title}</LinkComponent>;\n};","import styled from 'styled-components';\n\nimport backgroundImage from '../../images/background/background.jpg';\n\nexport const PageSection = styled.section`\n  width: 100%;\n  min-height: 100vh;\n  background-image: url(${backgroundImage});\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n`;","import { PageSection } from \"./Section_css\";\n\n\nexport const Section = ({children }) => {\n    return (\n        <PageSection>\n            {children}\n        </PageSection>);\n}\n  ","import styled from 'styled-components';\n\nexport const H2 = styled.h2`\n  color: var(--secondary-text-color);\n  font-size: 24px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n  margin-top: 26px;\n  margin-bottom: 24px;\n  @media screen and (min-width: 1440px) {\n    margin-top: 18px;\n  }\n`;\n\n\n\n\n\n","import styled from 'styled-components';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nexport const FormWrap = styled.div`\n  background-color: var(--primary-background-color);\n  padding: 40px 16px;\n  border-radius: 8px;\n  box-shadow: var(--primary-shadow);\n  @media screen and (min-width: 768px) {\n    padding: 40px 24px;\n  }\n  @media screen and (min-width: 1440px) {\n    padding: 40px 40px;\n  }\n`;\n\nexport const Div = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    flex-wrap: wrap;\n    gap: 24px;\n    height: 508px;\n  }\n  @media screen and (min-width: 1440px) {\n    gap: 42px;\n    height: 305px;\n  }\n`;\n\nexport const TextField = styled.input`\n  box-sizing: border-box;\n  border-radius: 8px;\n  border: 1px solid var(--border-color);\n  color: var(--secondary-text-color);\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 24px;\n  padding: 16px 12px;\n  margin-top: 8px;\n  margin-bottom: 20px;\n  width: 240px;\n  @media screen and (min-width: 768px) {\n    display: block;\n    margin-bottom: -4px;\n    width: 308px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-bottom: -22px;\n    width: 372px;\n  }\n  &:invalid {\n    border: 1px solid var(--error-validation-color);\n  }\n  &:focus-visible {\n    border: 1px solid var(--primary-text-color);\n    outline: none;\n  }\n`;\n\nexport const DatePickButton = styled.div`\n  position: 'absolute';\n  stroke: '#7B61FF';\n  top: '40px';\n  right: '16px';\n  z-index: '100';\n`;\n\nexport const Select = styled.select`\n  box-sizing: border-box;\n  border-radius: 8px;\n  border: 1px solid var(--border-color);\n  color: var(--secondary-text-color);\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 24px;\n  padding: 16px 12px;\n  margin-top: 8px;\n  margin-bottom: 20px;\n  width: 240px;\n  appearance: none;\n  &::-ms-expand {\n    display: block;\n  }\n  @media screen and (min-width: 768px) {\n    display: block;\n    width: 308px;\n    margin-bottom: -4px;\n    height: 57.45px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-bottom: -22px;\n    width: 372px;\n  }\n  &:invalid {\n    border: 1px solid var(--error-validation-color);\n  }\n  &:focus-visible {\n    border: 1px solid var(--primary-text-color);\n    outline: none;\n  }\n  & > option:first-child {\n    font-size: 0;\n  }\n  & > option {\n    margin-bottom: 20px;\n    display: flex;\n    gap: 20px;\n  }\n`;\n\nexport const DescriptionTextField = styled.textarea`\n  resize: none;\n  box-sizing: border-box;\n  border-radius: 8px;\n  border: 1px solid var(--border-color);\n  color: var(--secondary-text-color);\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 24px;\n  padding: 16px 12px;\n  margin-top: 8px;\n  margin-bottom: 20px;\n  width: 240px;\n  height: 159px;\n  @media screen and (min-width: 768px) {\n    display: block;\n    width: 308px;\n    margin-bottom: -4px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-bottom: -22px;\n    width: 372px;\n  }\n  &:focus-visible {\n    border: 1px solid var(--primary-text-color);\n    outline: none;\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  color: var(--primary-text-color);\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 16px;\n  letter-spacing: 0.4px;\n  @media screen and (min-width: 768px) {\n    display: block;\n  }\n  ${TextField}:disabled & {\n    color: var(--border-color);\n  }\n`;\n\nexport const DivWrap = styled.div`\n  position: relative;\n`;\n\nexport const ErrorDiv = styled.div`\n  position: absolute;\n  bottom: 0px;\n  right: 0px;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 16px;\n  color: var(--error-validation-color);\n\n  @media screen and (min-width: 768px) {\n    bottom: -20px;\n  }\n`;\n\nexport const ButtonDiv = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    justify-content: flex-end;\n  }\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  height: 56px;\n  padding: 16px;\n  border-radius: 8px;\n  background: var(--primary-text-color);\n  box-shadow: var(--primary-shadow);\n  border: none;\n  outline: none;\n  width: 193px;\n  margin-top: 20px;\n  color: var(--btn-accent-color);\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  &:hover, &:focus {\n    background: var(--btn-hover-background);\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  &:disabled {\n    background: var(--border-color);\n  }\n  @media screen and (max-width: 767px) {\n    width: 240px;\n  }\n`;\nexport const DatePick = styled(DatePicker)`\n  border-radius: 8px;\n  border: 1px solid var(--border-color);\n  color: var(--secondary-text-color);\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 24px;\n  padding: 16px 12px;\n  margin-top: 8px;\n  margin-bottom: 20px;\n  width: 240px;\n  @media screen and (min-width: 768px) {\n    display: block;\n    width: 308px;\n    margin-bottom: -4px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-bottom: -22px;\n    width: 372px;\n  }\n  &:invalid {\n    border: 1px solid var(--error-validation-color);\n  }\n  &:focus-visible {\n    border: 1px solid var(--primary-text-color);\n    outline: none;\n  }\n`;\n\nexport const DatePickerWrapper = styled.div`\n  & .react-datepicker {\n    border-radius: 11px;\n    background-color: var(--primary-background-color);\n    box-shadow: var(--calendar-shadow);\n    border: none;\n    padding: 20px;\n    font-family: 'Poppins';\n    width: 240px;\n    height: 348px;\n    @media screen and (min-width: 768px) {\n      width: 308px;\n    }\n    @media screen and (min-width: 1440px) {\n      width: 372px;\n    }\n  }\n\n  & .react-datepicker .react-datepicker__header {\n    background-color: var(--primary-background-color);\n    color: var(--secondary-text-color);\n    font-style: normal;\n    font-weight: 500;\n    line-height: 20px;\n    margin-bottom: 16px;\n    border-bottom: none;\n    padding: 0;\n  }\n\n  & .react-datepicker__navigation {\n    top: 16px;\n  }\n\n  & .react-datepicker__navigation-icon::before,\n  react-datepicker__navigation-icon::after {\n    border-color: var(--secondary-text-color);\n  }\n  & .react-datepicker__current-month {\n    font-size: 14px;\n    color: var(--secondary-text-color);\n    padding-bottom: 16px;\n  }\n\n  & .react-datepicker__month {\n    margin: 0;\n  }\n\n  & .react-datepicker__day {\n    color: var(--divider, var(--border-color));\n    text-align: center;\n    font-family: Inter;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 16px;\n    padding: 6px;\n    margin: 0;\n    margin-top: 2px;\n    @media screen and (min-width: 768px) {\n      margin: 6px;\n    }\n    @media screen and (min-width: 1440px) {\n      margin: 10px;\n    }\n    :hover,\n    :focus {\n      color: var(--btn-accent-color);\n      background-color: var(--primary-text-color);\n      transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    }\n  }\n\n  & .react-datepicker__day--keyboard-selected:hover, .react-datepicker__day--keyboard-selected:focus {\n    color: var(--btn-accent-color);\n    background-color: var(--primary-text-color);\n    border-radius: 0;\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  & .react-datepicker__day-name {\n    color: var(--secondary-text-color);\n    text-align: center;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 16px;\n    margin: 1.5px;\n    @media screen and (min-width: 768px) {\n      margin: 6px;\n    }\n    @media screen and (min-width: 1440px) {\n      margin: 10px;\n    }\n  }\n\n  & .react-datepicker__day-name:first-child,\n  .react-datepicker__day-name:last-child {\n    color: var(--priority-high-text-color);\n  }\n\n  & .react-datepicker__day--today {\n    color: var(--primary-text-color);\n    text-align: center;\n    font-family: 'Inter';\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 16px;\n  }\n\n  & .react-datepicker__day--selected {\n    background-color: var(--primary-text-color);\n    color: var(--btn-accent-color);\n    border-radius: 0;\n  }\n\n  & .react-datepicker__day--outside-month {\n    color: var(--btn-accent-color);\n  }\n\n  & .react-datepicker__children-container {\n    width: 240px;\n    @media screen and (min-width: 768px) {\n      width: 308px;\n    }\n    @media screen and (min-width: 1440px) {\n      width: 372px;\n    }\n  }\n\n  & .react-datepicker-popper[data-placement^='top'] .react-datepicker__triangle,\n  .react-datepicker-popper[data-placement^='bottom']\n    .react-datepicker__triangle::after,\n  .react-datepicker-popper[data-placement^='bottom']\n    .react-datepicker__triangle::before {\n    display: none;\n  }\n`;\n\nexport const ButtonPick = styled.button`\n  padding: 8px 16px;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid var(--primary-text-color);\n  border-radius: 4px;\n  background-color: var(--primary-background-color);\n  outline: none;\n  margin-top: 16px;\n  margin-bottom: 20px;\n  color: var(--primary-text-color);\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 16px;\n  &:hover, &:focus {\n    background-color: var(--btn-hover-background);\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  &:disabled {\n    background-color: var(--border-color);\n  }\n  @media screen and (min-width: 768px) {\n    margin-left: 87px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-left: 152px;\n  }\n`;\n\nexport const ButtonPickChoose = styled(ButtonPick)`\n  background-color: var(--primary-text-color);\n  color: var(--btn-accent-color);\n  margin-left: 16px;\n`;\n\nexport const TimePickerWrapper = styled.div`\n  & .react-datepicker__time-box {\n    border-radius: 8px;\n    background-color: var(--primary-background-color);\n    box-shadow: var(--primary-shadow);\n    border: none;\n    padding: 0 16px;\n    padding-right: 15px;\n    font-family: 'Poppins';\n    width: 240px;\n    height: 160px;\n    color: var(--border-color);\n    text-align: start;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: normal;\n    @media screen and (min-width: 768px) {\n      width: 308px;\n    }\n    @media screen and (min-width: 1440px) {\n      width: 372px;\n    }\n  }\n\n  &\n    .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box {\n    width: 240px;\n    @media screen and (min-width: 768px) {\n      width: 308px;\n    }\n    @media screen and (min-width: 1440px) {\n      width: 372px;\n    }\n  }\n\n  & .react-datepicker .react-datepicker__header {\n    display: none;\n  }\n\n  &\n    .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: 48px;\n    overflow-y: hidden;\n  }\n\n  &\n    .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box {\n    overflow-y: hidden;\n  }\n\n  & li.react-datepicker__time-list-item {\n    box-sizing: border-box;\n    margin-right: 8px;\n    display: flex;\n    align-items: center;\n    border-top: 1px solid var(--border-color);\n    border-bottom: 1px solid var(--border-color);\n    word-spacing: 36px;\n  }\n\n  &\n    .react-datepicker__time-container::-webkit-scrollbar\n    .react-datepicker__time\n    .react-datepicker__time-box::-webkit-scrollbar\n    ul.react-datepicker__time-list::-webkit-scrollbar {\n    width: 0px;\n    background: transparent;\n  }\n\n  &\n    .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item--selected {\n    color: var(--secondary-text-color);\n    background-color: var(--primary-background-color);\n    font-weight: 600;\n    box-sizing: border-box;\n  }\n\n  & .react-datepicker-popper[data-placement^='top'] .react-datepicker__triangle,\n  .react-datepicker-popper[data-placement^='bottom']\n    .react-datepicker__triangle::after,\n  .react-datepicker-popper[data-placement^='bottom']\n    .react-datepicker__triangle::before {\n    display: none;\n  }\n`;\n\nexport const CategoryOptions = styled.option`\n  border-radius: 8px;\n  background-color: var(--primary-background-color);\n  border-top: 1px solid var(--border-color);\n  border-bottom: 1px solid var(--border-color);\n  box-shadow: var(--primary-shadow);\n  border: none;\n  padding: 0 16px;\n  font-family: 'Poppins';\n  width: 240px;\n  height: 160px;\n  color: var(--secondary-text-color);\n  text-align: start;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 48px;\n  min-height: 48px;\n  height: 48px;\n  @media screen and (min-width: 768px) {\n    width: 308px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 372px;\n  }\n`;\n\nexport const SvgButtonCrossSmall = styled.button`\n  position: absolute;\n  height: 26px;\n  width: 26px;\n  top: 24px;\n  padding: 0;\n  right: 12px;\n  background-color: inherit;\n  border: 1px solid transparent;\n  cursor: pointer;\n  @media screen and (min-width: 768px) {\n    top: 16px;\n  }\n  &:hover, &:focus {\n    outline: none;\n    border: 1px solid var(--primary-text-color);\n    border-radius: 8px;\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nexport const SvgDivArrow = styled.div`\n  cursor: pointer;\n  position: absolute;\n  top: 46px;\n  right: 12px;\n  background-color: inherit;\n  z-index: 1;\n  @media screen and (min-width: 768px) {\n    top: 40px;\n  }\n`;\n","import React from 'react';\nimport { ErrorMessage, Field, useField } from 'formik';\nimport { DivWrap, ErrorDiv, Label, SvgButtonCrossSmall } from '../Form_css';\nimport { ReactComponent as CrossSmall } from '../../../images/svg/cross-small.svg';\n\nexport const TextInput = ({ label, ...props }) => {\n  const [field, meta, helpers] = useField(props);\n  const { setValue } = helpers;\n  return (\n    <Label\n      style={{\n        color: props.disabled && 'var(--border-color)',\n      }}\n    >\n      {label}\n      <DivWrap>\n        <Field\n          {...field}\n          {...props}\n          type=\"text\"\n          style={{\n            border:\n              meta.touched &&\n              meta.error &&\n              '1px solid var(--error-validation-color)',\n          }}\n        />\n        <SvgButtonCrossSmall\n          type=\"button\"\n          \n          onClick={() => {\n            setValue('');\n          }}\n          style={{\n            stroke:\n              (meta.touched && meta.error && 'var(--error-validation-color)') ||\n              (meta.value && 'var(--primary-text-color)') ||\n              'var(--border-color)',\n          }}\n        >\n          <CrossSmall aria-label=\"Clear the line\"/>\n        </SvgButtonCrossSmall>\n        <ErrorMessage component={ErrorDiv} name={field.name} />\n      </DivWrap>\n    </Label>\n  );\n};\n","import React from 'react';\nimport { ErrorMessage, Field, useField } from 'formik';\nimport {\n  CategoryOptions,\n  DivWrap,\n  ErrorDiv,\n  Label,\n  SvgDivArrow,\n} from '../Form_css';\nimport { ReactComponent as ChevronDownSmall } from '../../../images/svg/chevron-down-small.svg';\n\nexport const SelectInput = ({ label, array, ...props }) => {\n  const [field, meta] = useField(props);\n\n  return (\n    <Label>\n      {label}\n      <SvgDivArrow style={{ stroke: 'var(--primary-text-color)' }}>\n        <ChevronDownSmall aria-label=\"Make choice\"/>\n      </SvgDivArrow>\n      <DivWrap>\n        <Field\n          {...field}\n          {...props}\n          style={{\n            border:\n              meta.touched &&\n              meta.error &&\n              '1px solid var(--error-validation-color)',\n            color: meta.touched\n              ? 'var(--secondary-text-color)'\n              : 'var(--border-color)',\n          }}\n        >\n          {array.map(name => (\n            <CategoryOptions key={name} value={name}>\n              {name}\n            </CategoryOptions>\n          ))}\n        </Field>\n        <ErrorMessage component={ErrorDiv} name={field.name} />\n      </DivWrap>\n    </Label>\n  );\n};\n","export const priority = ['Select priority', 'High', 'Medium', 'Low'];\n\nexport const category = ['Select category', 'Art', 'Music', 'Business', 'Conference', 'Workshop', 'Party', 'Sport'];\n","import React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport {\n  Button,\n  ButtonDiv,\n  ButtonPick,\n  ButtonPickChoose,\n  DatePick,\n  DatePickerWrapper,\n  DescriptionTextField,\n  Div,\n  DivWrap,\n  ErrorDiv,\n  FormWrap,\n  Label,\n  Select,\n  TextField,\n  TimePickerWrapper,\n  SvgDivArrow,\n} from './Form_css';\nimport { useNavigate } from 'react-router-dom';\nimport { ReactComponent as ChevronDownSmall } from '../../images/svg/chevron-down-small.svg';\n\nimport { Formik, ErrorMessage, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { TextInput } from './TextInput/TextInput';\nimport { SelectInput } from './SelectInput/SelectInput';\nimport { category, priority } from 'helpers/variables';\n\nexport function EventForm({ onSubmitNewEvent }) {\n  const navigate = useNavigate();\n\n  const SignupSchema = Yup.object().shape({\n    title: Yup.string()\n      .required('Required')\n      .min(3, 'Title must be 3 characters or more')\n      .max(30, 'Title must be 30 characters or less')\n      .trim(),\n    description: Yup.string()\n      .required('Required')\n      .min(3, 'Must be 3 characters or more')\n      .max(300, 'Must be 30 characters or less')\n      .trim(),\n    selectDate: Yup.string(),\n    selectTime: Yup.string(),\n    location: Yup.string()\n      .required('Required')\n      .min(3)\n      .max(30)\n      .trim()\n      .matches(/^(?=.*[a-z])(?=.*[A-Z])/),\n    category: Yup.string().required('Required'),\n    // addPicture: Yup.string().url(),\n    priority: Yup.string().required('Required'),\n  });\n\n  const [startDate, setStartDate] = useState('');\n  const [startTime, setStartTime] = useState('');\n\n  return (\n    <FormWrap>\n      <Formik\n        validationSchema={SignupSchema}\n        validateOnBlur={false}\n        validateOnChange={true}\n        initialValues={{\n          title: '',\n          description: '',\n          selectDate: '',\n          selectTime: '',\n          location: '',\n          category: '',\n          addPicture: '',\n          priority: '',\n        }}\n        onSubmit={async (values, actions) => {\n          await onSubmitNewEvent({\n            title: values.title,\n            description: values.description,\n            date: startDate,\n            time: startTime,\n            location: values.location,\n            category: values.category,\n            priority: values.priority,\n            id: nanoid(),\n          });\n\n          navigate('/', { replace: true });\n\n          actions.resetForm({\n            values: {\n              title: '',\n              description: '',\n              selectDate: '',\n              selectTime: '',\n              location: '',\n              category: '',\n              addPicture: '',\n              priority: '',\n            },\n          });\n        }}\n      >\n        {() => (\n          <Form>\n            <Div>\n              <TextInput\n                name=\"title\"\n                label=\"Title\"\n                as={TextField}\n                placeholder=\"Enter title\"\n              />\n\n              <TextInput\n                name=\"description\"\n                label=\"Description\"\n                as={DescriptionTextField}\n                placeholder=\"Enter description\"\n              />\n\n              <DatePickerWrapper>\n                <Label>\n                  Select date\n                  <SvgDivArrow style={{ stroke: 'var(--primary-text-color)' }}>\n                    <ChevronDownSmall aria-label=\"Make choice date of event\"/>\n                  </SvgDivArrow>\n                  <DivWrap>\n                    <DatePick\n                      dateFormat=\"dd.MM.yyyy\"\n                      closeOnScroll={true}\n                      selected={startDate}\n                      locale=\"en\"\n                      onChange={date => setStartDate(date)}\n                      minDate={new Date()}\n                      placeholderText=\"Select date\"\n                    >\n                      <ButtonPick\n                        type=\"button\"\n                        onClick={e => {\n                          e.preventDefault();\n                          setStartDate('');\n                        }}\n                      >\n                        Clear\n                      </ButtonPick>\n                      <ButtonPickChoose\n                        type=\"button\"\n                        onClick={e => {\n                          e.preventDefault();\n                          window.scroll(0, 1);\n                        }}\n                      >\n                        Choose date\n                      </ButtonPickChoose>\n                    </DatePick>\n\n                    <ErrorMessage component={ErrorDiv} name=\"selectDate\" />\n                  </DivWrap>\n                </Label>\n              </DatePickerWrapper>\n\n              <TimePickerWrapper>\n                <Label>\n                  Select time\n                  <SvgDivArrow style={{ stroke: 'var(--primary-text-color)' }}>\n                    <ChevronDownSmall aria-label=\"Make choice time of event\"/>\n                  </SvgDivArrow>\n                  <DivWrap>\n                    <DatePick\n                      selected={startTime}\n                      onChange={time => setStartTime(time)}\n                      showTimeSelect\n                      showTimeSelectOnly\n                      timeIntervals={1}\n                      dateFormat=\"hh : mm  aa\"\n                      closeOnScroll={true}\n                      minDate={new Date()}\n                      placeholderText=\"Select time\"\n                    />\n\n                    <ErrorMessage component={ErrorDiv} name=\"selectTime\" />\n                  </DivWrap>\n                </Label>\n              </TimePickerWrapper>\n\n              <TextInput\n                name=\"location\"\n                label=\"Location\"\n                as={TextField}\n                placeholder=\"Choose location\"\n              />\n\n              <SelectInput\n                name=\"category\"\n                label=\"Category\"\n                as={Select}\n                placeholder=\"Choose category\"\n                array={category}\n              />\n\n              <TextInput\n                name=\"addPicture\"\n                label=\"Add picture\"\n                as={TextField}\n                placeholder=\"Choose picture\"\n                disabled\n              />\n\n              <SelectInput\n                name=\"priority\"\n                label=\"Priority\"\n                as={Select}\n                placeholder=\"Choose priority\"\n                array={priority}\n              />\n            </Div>\n\n            <ButtonDiv>\n              <Button type=\"submit\" aria-label=\"Submit form\">\n                Add event\n              </Button>\n            </ButtonDiv>\n            \n          </Form>\n        )}\n      </Formik>\n    </FormWrap>\n  );\n}\n","import React from 'react';\n\nimport { Container } from 'components/Container/Container';\nimport { H2 } from './Create_css';\nimport { Navigate } from 'components/Navigate/Navigate';\nimport { EventForm } from 'components/Form/Form';\nimport { Section } from 'components/Section/Section';\n\nexport function Create({ onSubmit }) {\n  return (\n    <main>\n      <Section>\n        <Container>\n          <Navigate to=\"/\" title=\"Back\" />\n          <H2>Create new event</H2>\n          <EventForm onSubmitNewEvent={onSubmit} />\n        </Container>\n      </Section>\n    </main>\n  );\n}\n\nexport default Create;\n"],"names":["_path","LinkComponent","styled","NavLink","_templateObject","_taggedTemplateLiteral","_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgArrowLeft","_ref","svgRef","title","titleId","props","width","height","fill","ref","id","strokeLinecap","strokeLinejoin","strokeWidth","d","ForwardRef","Navigate","to","_jsxs","children","_jsx","ArrowLeft","PageSection","backgroundImage","Section","H2","FormWrap","Div","_templateObject2","TextField","_templateObject3","Select","_templateObject4","_templateObject5","DescriptionTextField","_templateObject6","Label","_templateObject7","DivWrap","_templateObject8","ErrorDiv","_templateObject9","ButtonDiv","_templateObject10","Button","_templateObject11","DatePick","DatePicker","_templateObject12","DatePickerWrapper","_templateObject13","ButtonPick","_templateObject14","ButtonPickChoose","_templateObject15","TimePickerWrapper","_templateObject16","CategoryOptions","_templateObject17","SvgButtonCrossSmall","_templateObject18","SvgDivArrow","_templateObject19","TextInput","label","_useField","useField","_useField2","_slicedToArray","field","meta","setValue","style","color","disabled","Field","_objectSpread","type","border","touched","error","onClick","stroke","value","CrossSmall","ErrorMessage","component","name","SelectInput","array","ChevronDownSmall","map","priority","category","EventForm","onSubmitNewEvent","navigate","useNavigate","SignupSchema","Yup","shape","required","min","max","trim","description","selectDate","selectTime","location","matches","_useState","useState","_useState2","startDate","setStartDate","_useState3","_useState4","startTime","setStartTime","Formik","validationSchema","validateOnBlur","validateOnChange","initialValues","addPicture","onSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","actions","wrap","_context","prev","next","date","time","nanoid","replace","resetForm","stop","_x","_x2","Form","as","placeholder","dateFormat","closeOnScroll","selected","locale","onChange","minDate","Date","placeholderText","e","preventDefault","window","scroll","showTimeSelect","showTimeSelectOnly","timeIntervals","Create","Container"],"sourceRoot":""}